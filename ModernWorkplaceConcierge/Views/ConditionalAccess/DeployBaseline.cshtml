
@model IEnumerable<String>
@{
    ViewBag.Current = "ConditionalAccessBasline";
}

<div class="jumbotron">
    <h1>Deploy Conditional Access Basline</h1>

    <p>Deploy a full set of Conditional Access Policies and generate an AAD group excluded from all policies. Policy sets are provided by <a href="https: //github.com/AlexFilipin/ConditionalAccess" target="_blank">@@AlexFilipin</a>. Kudos for his excellent work!</p>
</div>


@using (Html.BeginForm("CreateGroup", "ConditionalAccess", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div class="form-group">

    <input type="text" name="clientId" class="d-none" id="clientId">

    <label for="displayName">Conditional Access Excluded Group</label>
    <input type="text" name="displayName" class="form-control" placeholder="aad-conditional-access-exclusions" id="displayName">
    <small id="aadHelp" class="form-text text-muted">This Azure AD Group will be created and excluded from all Conditional Access policies.</small>
    <br />

    <label for="displayName">Legacy Authentication Excluded Group</label>
    <input type="text" name="allowLegacyAuth" class="form-control" placeholder="aad-conditional-access-allow-legacy-auth" id="allowLegacyAuth">
    <small id="aadHelp" class="form-text text-muted">This Azure AD Group will be created and excluded from the policy preventing legacy authentication.</small>
    <br />

    <label for="displayName">Conditional Access Policy Prefix</label>
    <input type="text" name="policyPrefix" class="form-control" id="policyPrefix" placeholder="CAR -">
    <small id="aadHelp" class="form-text text-muted">This prefix will be added to all policies display name.</small>

    <br />
    <label for="displayName">Conditional Access Policy Set</label>
    @Html.DropDownList("selectedBaseline", new SelectList(Model), new { @class = "form-control" })
    <small id="aadHelp" class="form-text text-muted">Select your desired conditional access policy set.</small>
    <br />
    <button class="btn btn-primary" type="submit" id="upload">
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: none" id="loady"></span>
        Deploy ✨
    </button>
</div>
}

<script>
    (function () {
        $('#upload').click(function () {
            $('#loady').show();
        })
    })();
</script>

<script runat="server">
    String[] XmlFiles = Directory.GetDirectories(MapPath("~/Content/PolicySets"));


        for (int x = 0; x < XmlFiles.Length; x++)
           XmlFiles[x] = Path.GetFileNameWithoutExtension(XmlFiles[x]);


        DropDownList1.DataSource = XmlFiles;
        DropDownList1.DataBind();
</script>

@section scripts {
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script src="~/Content/MwConciergeSignalR.js"></script>


}